name: ü§ñ Automated PR Review & Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master, develop]

permissions:
  contents: read
  pull-requests: write
  checks: write
  statuses: write

jobs:
  # Security and vulnerability scanning
  security-scan:
    name: Security Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, typescript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Code quality and linting
  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: TypeScript type checking
        run: npm run type-check

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

  # Build and deployment verification
  build-verification:
    name: Build & Deployment Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Verify Vercel deployment readiness
        run: npm run prepare-vercel

  # AI-powered code review
  ai-code-review:
    name: AI Code Review
    runs-on: ubuntu-latest
    needs: [security-scan, code-quality, build-verification]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: AI Code Review
        uses: coderabbitai/coderabbit-action@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          openai_api_key: ${{ secrets.OPENAI_API_KEY }}

  # Performance and bundle analysis
  performance-analysis:
    name: Performance Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build for analysis
        run: npm run build

      - name: Analyze bundle size
        uses: nextjs-bundle-analysis/bundle-analysis-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          workflow-id: pr-review.yml

  # Final PR status check
  pr-status:
    name: PR Status Summary
    runs-on: ubuntu-latest
    needs: [security-scan, code-quality, build-verification, ai-code-review, performance-analysis]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.security-scan.result }}" == "success" && 
                "${{ needs.code-quality.result }}" == "success" && 
                "${{ needs.build-verification.result }}" == "success" && 
                "${{ needs.ai-code-review.result }}" == "success" && 
                "${{ needs.performance-analysis.result }}" == "success" ]]; then
            echo "‚úÖ All checks passed! PR is ready for review."
            exit 0
          else
            echo "‚ùå Some checks failed. Please review and fix issues."
            exit 1
          fi

      - name: Comment PR status
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && comment.body.includes('ü§ñ Automated PR Review Summary')
            );
            
            const status = '${{ needs.security-scan.result }}' === 'success' &&
                          '${{ needs.code-quality.result }}' === 'success' &&
                          '${{ needs.build-verification.result }}' === 'success' &&
                          '${{ needs.ai-code-review.result }}' === 'success' &&
                          '${{ needs.performance-analysis.result }}' === 'success';
            
            const body = `## ü§ñ Automated PR Review Summary
            
            **Status:** ${status ? '‚úÖ All checks passed' : '‚ùå Some checks failed'}
            
            ### Check Results:
            - **Security Scan:** ${{ needs.security-scan.result === 'success' && '‚úÖ' || '‚ùå' }} ${{ needs.security-scan.result }}
            - **Code Quality:** ${{ needs.code-quality.result === 'success' && '‚úÖ' || '‚ùå' }} ${{ needs.code-quality.result }}
            - **Build Verification:** ${{ needs.build-verification.result === 'success' && '‚úÖ' || '‚ùå' }} ${{ needs.build-verification.result }}
            - **AI Code Review:** ${{ needs.ai-code-review.result === 'success' && '‚úÖ' || '‚ùå' }} ${{ needs.ai-code-review.result }}
            - **Performance Analysis:** ${{ needs.performance-analysis.result === 'success' && '‚úÖ' || '‚ùå' }} ${{ needs.performance-analysis.result }}
            
            ${status ? 
              'üéâ **This PR is ready for human review!**' : 
              '‚ö†Ô∏è **Please address the failing checks before requesting review.**'
            }
            
            ---
            *This comment is automatically updated on each push.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
